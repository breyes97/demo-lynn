@* <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] - DemoLynn</title>
    <link href="https://kendo.cdn.telerik.com/2023.1.425/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="https://kendo.cdn.telerik.com/2023.1.425/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="https://kendo.cdn.telerik.com/2023.1.425/js/jquery.min.js"></script>
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2023.1.425/styles/kendo.common.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2023.1.425/styles/kendo.default.min.css" />
    <style>
        html {
            font-size: 14px;
            font-family: Arial, Helvetica, sans-serif;
    }</style>


    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2023.1.425/js/kendo.all.min.js"></script>
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/themes/6.3.0/default/default-ocean-blue.css">
    
    @RenderSection("Styles", required: false)
</head>
<body>
    <header>
        @* <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">DemoLynn</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav> *@
    @* </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - DemoLynn - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    @* <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script> *@
   @*  @await RenderSectionAsync("Scripts", required: false) *@
@* </body>
</html>  *@ 

@inject IHtmlLocalizer<SharedResourceViews> GlobalIdentifierLanguage
@inject IConfiguration Configuration
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IOptions<RequestLocalizationOptions> LocOptions

@using Microsoft.AspNetCore.Identity
@using MESSAGES_BROKER_BOT_CORE_V5.Models.InternalModel
@using MESSAGES_BROKER_BOT_CORE_V5.Models.ViewModel
@using Microsoft.Extensions.Configuration
@* @{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var langValue = requestCulture.RequestCulture.UICulture.Name;

    var Environment = Configuration["LynnEnvironment:Environment"];
    var EnvironmentToShow = Environment;
    var ReportEnvironment = Configuration["LynnEnvironment:ReportEnvironment"];
    if (ReportEnvironment.ToLower() == "qa")
    {
        EnvironmentToShow = "Qa";
    }

    var currentUserId = 0;
    ApplicationUser user = null;
    if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
        currentUserId = user.Id;
    }

    var controllerName = "home";
    var actionName = "index";
    try
    {
        controllerName = ViewContext.RouteData.Values["controller"].ToString().ToLower();
    }
    catch { }
    try
    {
        actionName = ViewContext.RouteData.Values["action"].ToString().ToLower();
    }
    catch { }
    var classPage = $"page-{controllerName}-{actionName}";

    var showNiceScroll = true;
    if (controllerName == "diagram" && actionName == "index")
    {
        showNiceScroll = false;
    }
    if (controllerName == "home" && actionName == "index")
    {
        showNiceScroll = false;
    }
} *@
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <meta name="robots" content="all,follow">
    @*<meta name="color-scheme" content="dark light">*@
    <title>@ViewData["Title"]</title>
    @* @if (controllerName == "executive" || ViewBag.KyuboEnvironment == "true")
    {
        <link rel="icon" type="image/x-icon" href="~/favicon-kyubo.ico">
    }
    else
    {
        <link rel="icon" type="image/x-icon" href="~/favicon-lynn.ico">
    } *@
    <!-- Pace Preloading
    ============================================ -->
    <link rel="stylesheet" href="~/vendor/pace/themes/blue/pace-theme-minimal.css" />
    <script>
        paceOptions = {
            elements: true,
            eventLag: false,
            document: true,
            //ajax: true,
            ajax: {
                ignoreURLs: ['telemetryHubs'],
                trackWebSockets: false
            }
        };
    </script>
    <script type="text/javascript" language="javascript" src="~/vendor/pace/pace.min.js"></script>
    <script>
        Pace.on("start", function () {
            //$("div.paceDiv").show();
        });
        Pace.on("done", function () {
            //$("div.paceDiv").hide();
        });
        Pace.bar.update = function (prog) {
            Pace.trigger('update', prog)
            this.progress = prog;
            return this.render();
        }
        Pace.on('update', progress => {
            //console.log('progress -> ', progress);
            var body = document.body;
            if (progress > 80) {
                body.classList.remove("pace-cover");
            } else {
                body.classList.add("pace-cover");
            }
        })
    </script>
    <!-- Bootstrap CSS
    ============================================ -->
    <link rel="stylesheet" href="~/lib/twitter-bootstrap-5/css/bootstrap.min.css">
    <!-- Bootstrap Multicarousel CSS
    ============================================ -->
    <link rel="stylesheet" href="~/vendor/multi-carousel/multi-carousel.min.css">
    <!-- Kendo CSS
    ============================================ -->
    <link rel="stylesheet" href="~/vendor/kendo-ui/styles/kendo.common.min.css" />
    <link rel="stylesheet" href="~/vendor/kendo-ui/styles/kendo.default-lynn-2024.css?v=@ViewBag.ImplementationVersionJS" />
    <link rel="stylesheet" href="~/vendor/kendo-ui/styles/kendo.dataviz.min.css" />
    <link rel="stylesheet" href="~/vendor/kendo-ui/styles/kendo.dataviz.silver.min.css" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css">
    <!-- Custom Icons
    ============================================ -->
    <link rel="stylesheet" href="~/lynnicons/fontlynn.css?v=@ViewBag.ImplementationVersionJS">
    <link rel="stylesheet" href="~/lynnicons-2024/fontlynn-2024.css?v=@ViewBag.ImplementationVersionJS">
    <link rel="stylesheet" href="~/lynnicons/channel-lynn.css?v=@ViewBag.ImplementationVersionJS">
    <!-- animate CSS
    ============================================ -->
    <link rel="stylesheet" href="~/vendor/animate/animate.min.css">
    <!-- Percentage Circle -->
    <link rel="stylesheet" href="~/vendor/percentage-circle/css/circle.css" />
    <!-- normalize CSS
    ============================================ -->
    <link rel="stylesheet" href="~/vendor/normalize.css">
    <!-- Channels -->
    <link rel="stylesheet" href="~/css/channels.css?v=@ViewBag.ImplementationVersionJS">
    <!-- Custom Lynn/Kyubo CSS
    ============================================ -->
    <link rel="stylesheet" href="~/css/lynnstyle-2024.css?v=@ViewBag.ImplementationVersionJS">
    @* @if (controllerName == "executive" || ViewBag.KyuboEnvironment == "true")
    {
        <link rel="stylesheet" href="~/css/kyubostyle-2024.css?v=@ViewBag.ImplementationVersionJS">
    } *@

    <style type="text/css">
    </style>

    @* @if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
        <script>
            var siteRootUrl = '@Url.Content("~")';
            var currentLanguage = "@langValue";

            userLogged = true;
            currentUserId = @user.Id;
            currentUserName = "@(user.FullName)";
            currentUser = "@(user.UserName)";
        </script>
    }
    else
    {
        <script>
            var siteRootUrl = '@Url.Content("~")';
            var currentLanguage = "@langValue";

            var userLogged = false;
            var currentUserId = 0;
        </script>
    } *@
</head>
<body class="lynn-body @* @classPage @(controllerName=="executive" || ViewBag.KyuboEnvironment=="true"?"kyubo-page executive-page":"") @(controllerName == "diagram" && actionName == "index" ? "diagrama-page": "") pace-cover" *@>
    @if (ViewBag.EmptyLayout == "true")
    {
        @RenderBody()
    }
    else
    {
        <aside class="sidebar open">
            <div class="sidebar-wrapper">
                <i id="btn-open-sidebar" class="lns lns-bars lg"></i>
                <div class="sidebar-header">
                    @if (controllerName == "executive" || ViewBag.KyuboEnvironment == "true")
                    {
                        <div class="logo"></div>
                        @* <img src="~/css/lynn/kyubo-logo.svg" class="header-logo w-100_"> *@
                        <h7 class="slogan-kyubo mb-0 ">Omnichannel Suite</h7>
                    }
                    else
                    {
                        <div class="logo"></div>

                        <a href="#" id="change_environment" class="change-environment">
                            <span class="environment">@Html.Raw(GlobalIdentifierLanguage[EnvironmentToShow].Value)</span>
                        </a>
                    }
                </div>
                <div id="sidebar-options" class="sidebar-options">
                    <ul class="nav-list">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            @if (controllerName == "executive")
                            {
                                @if (ViewBag.UserIsExecutive)
                                {
                                    <li>
                                        <a href="@Url.Action("Index", "Executive")" id="access-executive" class="@(actionName == "index" ? "selected": "")" data-pg-collapsed title="@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)">
                                            <i class="ln ln-kyubo"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)</span>
                                        </a>
                                    </li>

                                    @* @if (actionName == "index")
                    {
                    <li>
                    <a href="@Url.Action("Index", "Executive")" id="access-executive" class="selected" data-pg-collapsed title="@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)">
                    <i class="ln ln-kyubo"></i>
                    <span>@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)</span>
                    </a>
                    </li>
                    }
                    else
                    {
                    <li>
                    <a href="@Url.Action("Index", "Executive")" id="access-executive" class="selected" data-pg-collapsed title="@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)">
                    <i class="ln ln-kyubo"></i>
                    <span>@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)</span>
                    </a>
                    </li>
                    }*@
                                }
                                @* @if (ViewBag.UserIsGUI)
                                {
                                    <li>
                                        <a href="@Url.Action("Index", "Home")" class="" title="@Html.Raw(GlobalIdentifierLanguage["Lynn"].Value)">
                                            <i class="ln ln-lynn "></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Lynn"].Value)</span>
                                        </a>
                                    </li>
                                }
                                @if (ViewBag.UserIsExecutive)
                                {
                                    <li>
                                        <a href="@Url.Action("Dashboard", "Executive")" id="access-supervisor" class="@(actionName == "dashboard" ? "selected": "")" title="@Html.Raw(GlobalIdentifierLanguage["Supervisor Dashboard"].Value)">
                                            <i class="ln ln-dashboard"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Supervisor Dashboard"].Value)</span>
                                        </a>
                                    </li>
                                }
                                @if (ViewBag.UserIsSupervisor)
                                {
                                    <li>
                                        <a href="javascript:configUser('0');" class="" title="@Html.Raw(GlobalIdentifierLanguage["Configurar Supervisor"].Value)">
                                            <i class="ln ln-user-cog"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Configurar Supervisor"].Value)</span>
                                        </a>
                                    </li>
                                    <li>
                                        <div class="dropdown-sidebar dropdown-skill">
                                            <a href="#" class="show-skills" title="@Html.Raw(GlobalIdentifierLanguage["Skills"].Value)">
                                                <i class="ln ln-medal"></i>
                                                <span>@Html.Raw(GlobalIdentifierLanguage["Skills"].Value)</span>
                                            </a>
                                            <div class="filter-input">
                                                <input id="skillList" placeholder="@Html.Raw(GlobalIdentifierLanguage["Filtro de Elementos..."].Value)" />
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="dropdown-sidebar dropdown-workgroup">
                                            <a href="#" class="show-workgroups" title="@Html.Raw(GlobalIdentifierLanguage["Workgroups"].Value)">
                                                <i class="ln ln-users-cog"></i>
                                                <span>@Html.Raw(GlobalIdentifierLanguage["Workgroups"].Value)</span>
                                            </a>
                                            <div class="filter-input">
                                                <input id="workgroupList" placeholder="@Html.Raw(GlobalIdentifierLanguage["Filtro de Elementos..."].Value)" />
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="dropdown-sidebar dropdown-user">
                                            <a href="#" class="show-users" title="@Html.Raw(GlobalIdentifierLanguage["Usuarios"].Value)">
                                                <i class="ln ln-user-group"></i>
                                                <span>@Html.Raw(GlobalIdentifierLanguage["Usuarios"].Value)</span>
                                            </a>
                                            <div class="filter-input">
                                                <input id="userList" placeholder="@Html.Raw(GlobalIdentifierLanguage["Filtro de Elementos..."].Value)" />
                                            </div>
                                        </div>
                                    </li>
                                }
                            }
                            else
                            {
                                @if (ViewBag.UserIsExecutive && ViewBag.KyuboEnvironment == "true")
                                {
                                    <li class="sidebar-general disabled">
                                        <a href="@Url.Action("Index", "Executive")" id="access-executive" class="selected_" data-pg-collapsed title="@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)">
                                            <i class="ln ln-kyubo"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Kyubo"].Value)</span>
                                        </a>
                                    </li>
                                }
                                <li class="sidebar-home disabled">
                                    <a href="#" id="btn-home-sidebar" class="show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Inicio"].Value)">
                                        <i class="lns lns-layout_ lns-home s15"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Inicio"].Value)</span>
                                    </a>
                                </li>
                                <li class="sidebar-diagram disabled">
                                    <a href="#" id="btn-diagram-sidebar" class="selected_ show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Diagrama"].Value)">
                                        <i class="lns lns-palette s15"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Diagrama"].Value)</span>
                                    </a>
                                </li>
                                <li class="sidebar-dashboard disabled">
                                    <div class="dropdown-sidebar dropdown-dashboard">
                                        <a href="#" id="btn-dashboard-sidebar" title="@Html.Raw(GlobalIdentifierLanguage["Analítica"].Value)">
                                            <i class="lns lns-chart-bar s15"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Analítica"].Value)</span>
                                        </a>
                                        <div class="filter-input">
                                            <input id="dashboardListSidebar" placeholder="@Html.Raw(GlobalIdentifierLanguage["Filtro de Elementos..."].Value)" />
                                        </div>
                                    </div>
                                </li>
                                <li class="sidebar-outbound disabled">
                                    <a href="#" id="btn-outbound-sidebar" class="show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Campannas"].Value)">
                                        <i class="lns lns-bullhorn s15"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Campannas"].Value)</span>
                                    </a>
                                </li>
                                <li class="sidebar-tarification disabled">
                                    <a href="#" id="btn-tarification-sidebar" class="show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Tarificación"].Value)" data-title="@Html.Raw(GlobalIdentifierLanguage["Tarificación"].Value)">
                                        <i class="lns lns-dollar-sign s15"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Tarificación"].Value)</span>
                                    </a>
                                </li>
                                <li class="sidebar-deploy disabled">
                                    <a href="#" id="btn-deploy-sidebar" class="show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Producción"].Value)" data-title="@Html.Raw(GlobalIdentifierLanguage["Producción"].Value)">
                                        <i class="lns lns-suitcase s15"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Producción"].Value)</span>
                                    </a>
                                </li>
                                <li class="sidebar-notification disabled">
                                    <a href="#" id="btn-notification-sidebar" class="notification-info show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Asignar notificaciones"].Value)" data-title="@Html.Raw(GlobalIdentifierLanguage["Asignar notificaciones"].Value)">
                                        <i class="lns lns-notification-cog s15"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Asignar notificaciones"].Value)</span>
                                    </a>
                                </li>

                                @if (ViewBag.UserIsRoot != null && ViewBag.UserIsRoot)
                                {
                                    <li class="sidebar-general disabled">
                                        <a href="#" id="cluster-balancing" class="show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Balanceo de Clusteres"].Value)" data-url="@Url.Action("Index", "ClusterBalancing")" data-title="@GlobalIdentifierLanguage["Balanceo de Clusteres"].Value">
                                            <i class="ln ln-load-balance"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Balanceo de Clusteres"].Value)</span>
                                        </a>
                                    </li>
                                }

                                <li class="sidebar-general disabled">
                                    <a href="@Url.Action("Index", "ServicesStatus")" class="show-tooltip-left k-link @(controllerName == "servicesstatus" && actionName == "index"?"selected":"")" title="@Html.Raw(GlobalIdentifierLanguage["Estado de los servicios"].Value)">
                                        <i class="ln ln-info"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Estado de los servicios"].Value)</span>
                                    </a>
                                </li>

                                @if (controllerName == "diagram" && actionName == "index")
                                {
                                    <li class="sidebar-purecloud disabled">
                                        <a href="#" id="uninstall-tenant" class="show-tooltip-left k-link" title="@Html.Raw(GlobalIdentifierLanguage["Desinstalar Lynn"].Value)">
                                            <i class="lns lns-uninstall s15"></i>
                                            <span>@Html.Raw(GlobalIdentifierLanguage["Desinstalar Lynn"].Value)</span>
                                        </a>
                                    </li>
                                }
                            }
                        }
                        else
                        {
                            @if (ViewBag.UserIsRoot != null && ViewBag.UserIsRoot)
                            {
                                <li class="sidebar-general disabled">
                                    <a href="#" id="cluster-balancing" title="GlobalIdentifierLanguage[" Balanceo de Clusteres"].Value" data-url="@Url.Action("Index", "ClusterBalancing")" data-title="@GlobalIdentifierLanguage["Balanceo de Clusteres"].Value">
                                        <i class="ln ln-load-balance"></i>
                                        <span>@Html.Raw(GlobalIdentifierLanguage["Balanceo de Clusteres"].Value)</span>
                                    </a>
                                </li>
                            }

                            <li class="sidebar-general disabled">
                                <a href="@Url.Action("Index", "ServicesStatus")" class="@(controllerName == "servicesstatus" && actionName == "index"?"selected":"")" title="@Html.Raw(GlobalIdentifierLanguage["Estado de los servicios"].Value)">
                                    <i class="ln ln-info"></i>
                                    <span>@Html.Raw(GlobalIdentifierLanguage["Estado de los servicios"].Value)</span>
                                </a>
                            </li>
                        }

                        @if (currentUserId == 1)
                        {
                            <li class="sidebar-general disabled">
                                <a href="@Url.Action("ResetSeviceBus", "Tools")" class="btn-reset-servicebus" title="@Html.Raw(GlobalIdentifierLanguage["Reiniciar Service Bus"].Value)">
                                    <i class="fas fa-tools"></i>
                                    <span>@Html.Raw(GlobalIdentifierLanguage["Reiniciar Service Bus"].Value)</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
                @if (user != null)
                {
                    <div class="sidebar-footer">
                        <div>
                            <a href="#" class="btn-profile-picture update-profile" data-url="@Url.Action("UpdateProfile", "Account")" data-title="@Html.Raw(GlobalIdentifierLanguage["Modificar Perfil"].Value)">
                                <i class="lns lns-camera s15"></i>
                            </a>
                        </div>
                        <div class="sidebar-footer-info">
                            <div class="name">@(user.FullName)</div>
                            <div class="info">
                                <a href="@Url.Action("Logout", "Account")" style="color: #fff; text-decoration: none;">
                                    <i class="fa fa-power-off" aria-hidden="true"></i>
                                    @Html.Raw(GlobalIdentifierLanguage["Cerrar Sesión"].Value)
                                </a>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </aside>

        <main id="drawer" class="main-wrapper">
            <header class="header-wrapper">
                <div class="container-fluid header-containner">
                    <ul class="menu-left">
                        <li>
                            <a href="@Url.Action("Index", "Home")" class="link-icon">
                                <i class="k-icon lns lns-home sm"></i>
                                <span>@GlobalIdentifierLanguage["Inicio"].Value</span>
                            </a>
                        </li>
                        @if (controllerName != "executive" && SignInManager.IsSignedIn(User))
                        {
                            <li>
                                <a href="@Url.Action("Index", "Account")">
                                    <span>@GlobalIdentifierLanguage["Usuarios"].Value</span>
                                </a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "ApiSecurity")">
                                    <span>@GlobalIdentifierLanguage["Seguridad"].Value</span>
                                </a>
                            </li>
                        }
                        <li>
                            <a href="https://resources.lynn.cx/" target="_blank">
                                <span>@GlobalIdentifierLanguage["Ayuda"].Value</span>
                            </a>
                        </li>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <li>
                                @* <div class="dropdown"> *@
                                <div id="notifications" class="dropdown">
                                    <a href="#" id_="dropdownNotification" class="link-notification dropdown-toggle_"
                                       data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="k-icon lns lns-bell xs"><mark class="status-notification"></mark></i>
                                    </a> *@

                                    @* <ul class="dropdown-menu animated zoomIn" aria-labelledby_="dropdownNotification">
                            <li><a class="dropdown-item" href="#">Action 1</a></li>
                            <li><a class="dropdown-item" href="#">Another action 2</a></li>
                            <li><a class="dropdown-item" href="#">Something else here 3</a></li>
                            </ul> *@
@*                                     <div class="dropdown-menu notifications-list animated zoomIn" aria-labelledby_="dropdownNotification">
                                        <div class="notification-heading">
                                            <div class="k-title">@Html.Raw(GlobalIdentifierLanguage["Notificaciones"].Value)</div>
                                            <a class="clear-all-notifications" href="#">@Html.Raw(GlobalIdentifierLanguage["Descartar todo"].Value)</a>
                                        </div>
                                        <div id="notification-items" class="notifications-wrapper"></div>
                                    </div>
                                </div>
                            </li>
                        }
                        <li>
                            @{
                                var cultureItems = LocOptions.Value.SupportedUICultures
                                //.Select(c => new SelectListItem { Value = c.Name, Text = GlobalIdentifierLanguage[c.DisplayName.ToLower()].Value })
                                .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName.First().ToString().ToUpper() + c.NativeName.Substring(1) })
                                .ToList();

                                var currentCulture = cultureItems.FirstOrDefault(i => i.Value == langValue);
                                string urlPath = string.IsNullOrEmpty(Context.Request.Path) ? "/" : Context.Request.Path.Value;
                                var returnUrl = Context.Request.PathBase + urlPath + Context.Request.QueryString;
                            }

                            <div class="dropdown dropdown-language">
                                <a href="#" id_="dropdownLanguage" class="btn btn-language dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="ln-flag @currentCulture.Value.ToString() round"></i>@currentCulture.Text
                                </a>
                                <ul class="dropdown-menu animated zoomIn" aria-labelledby_="dropdownLanguage">
                                    @foreach (var culture in cultureItems)
                                    {
                                        @if (culture.Value == langValue)
                                        {
                                            continue;
                                        }
                                        <li>
                                            <a href="@Url.Action("SetLanguage", "Home")" class="btn dropdown-item set-language" data-language="@culture.Value" data-currenturl="@returnUrl">
                                                <i class="ln-flag @culture.Value.ToString() round"></i>&nbsp;@culture.Text
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </li>
                    </ul>
                </div>
            </header>
            <!-- revisar -->
            <section class="main @(controllerName == "home" && actionName == "index" ? "home" : "")  @(showNiceScroll ? "nice-scrollbar" : "")">
                <div class="container-fluid wrapper-main-content">
                    @RenderBody()
                </div>
            </section>
            <footer class="footer-wrapper">
                @if (controllerName == "executive" || ViewBag.KyuboEnvironment == "true")
                {
                    <div class="copy-right"> &copy;@DateTime.Now.Year.ToString() Kyubo. @GlobalIdentifierLanguage["Todos los derechos reservados"].Value</div>
                }
                else
                {
                    <div class="copy-right"> &copy;@DateTime.Now.Year.ToString() Lynn. @GlobalIdentifierLanguage["Todos los derechos reservados"].Value</div>
                }
            </footer>
        </main>
    }

    <div id="accessDenied" style="display: none">
        <div class="d-flex justify-content-center">
            <div class="col-md-7">

                <h2 class="text-center">@Html.Raw(GlobalIdentifierLanguage["Status Code: 403"].Value)</h2>
                <p>
                    @Html.Raw(GlobalIdentifierLanguage["Sorry, your access is refused due to security reasons of our server and also our sensitive data."].Value)
                </p>
            </div>
        </div>
    </div> *@

    <div id="dialogMessage"></div>
    <div id="dialogConfirmDefault"></div>
    <div id="dialogConnectionClose"></div>

    <div id="windowHelp"></div>
    <div id="windowDefault"></div>
    <div id="windowPAP"></div>
    <div id="windowPAPProgress"></div>
    <div id="windowPAPSummary"></div>

    <div id="skillConfirm"></div>
    <div id="workgroupConfirm"></div>
    <div id="userConfirm"></div>

    <div id="window-division-sidebar"></div>
    <div id="window-outbound-sidebar"></div>
    <div id="windowDashboardAdminSidebar"></div>
    <div id="windowDashboardAdmin"></div>

    @*
    <div class="lds-default"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
    <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
    *@


    <span id="notification" style="display:none;"></span>
    <script id="verificationTemplate" type="text/x-kendo-template">
        <div class="success-notification tenant-verification">
            <h3><i class="fas fa-check"></i> @Html.Raw(GlobalIdentifierLanguage["Verificacion del tenant"].Value)</h3>
            <p>@Html.Raw(GlobalIdentifierLanguage["MessageTenantVerification"].Value)</p>
            <button id="btnShowTenantVerification" class="k-button k-button-solid-base">@Html.Raw(GlobalIdentifierLanguage["Mostrar reporte"].Value)</button>
        </div>
    </script>
    <script id="processTemplateForList" type="text/x-kendo-template">
        <div class="k-widget k-popup k-notification k-notification-process k-state-border-up" data-role="alert" aria-hidden="false">
            <div id="processlist_#: id #" class="process-notification">
                <div class="notification-process">
                    <div class="notification-process-child one">
                        <h3>
                            <i class="icon-process icon-start far fa-check-circle"></i>
                            <i class="icon-process icon-status far fa-clock"></i>
                            <i class="icon-process icon-end far fa-check-circle"></i>
                            <i class="icon-process icon-error far fa-times-circle"></i>
                            <span class="process-title">#= title #</span>
                        </h3>
                    </div>
                    <div class="notification-process-child two">
                        <a href="\#" class="k-link process-close"><i class="fa fa-times"></i></a>
                    </div>
                </div>
                <p class="process-message">#= message #</p>
                <span class="progress">#= percent #%</span>

                <ul class="persistent-notification-list">
                    #for (var i=0; i<listMsg.length; i++){#
                        <li>#=listMsg[i]#</li>
                    # } #
                </ul>
            </div>
        </div>
    </script>

    <script>
        var idTenantUpload;
        var _PureCloud = "@ViewBag.FromPureCloud";

        var _msgRequiredPassword = "@Html.Raw(GlobalIdentifierLanguage["Este campo es obligatorio."].Value)";

        var _msgTareaExitosa = "@Html.Raw(GlobalIdentifierLanguage["Tarea ejecutada exitosamente."].Value)";
        var _msgTareaNoExitosa = "@Html.Raw(GlobalIdentifierLanguage["No se pudo ejecutar la tarea, por favor verifique la informacion"].Value)";
        var _msgEntidadEnUso = "@Html.Raw(GlobalIdentifierLanguage["Esta entidad esta en uso, debe revisar el entrenamiento"].Value)";

        var _msgAccessDenied = "@Html.Raw(GlobalIdentifierLanguage["AccessDenied"].Value)";
        var _msgDeleteTenant = "@Html.Raw(GlobalIdentifierLanguage["Borrar Tenant"].Value)";

        var _msgMensaje = "@Html.Raw(GlobalIdentifierLanguage["Mensaje"].Value)";
        var _msgConfirmacion = "@Html.Raw(GlobalIdentifierLanguage["Confirmacion"].Value)"
        var _msgCancelar = "@Html.Raw(GlobalIdentifierLanguage["Cancelar"].Value)";

        var _msgValidationGuid = "@Html.Raw(GlobalIdentifierLanguage["Campo debe contener 32 dígitos con 4 guiones(xxxxxxxx - xxxx - xxxx - xxxx - xxxxxxxxxxxx)."].Value)";
        var _msgValidationAlfaNum = "@Html.Raw(GlobalIdentifierLanguage["Campo debe contener solo número y letras"].Value)";

        var _msgEncontrados = "@Html.Raw(GlobalIdentifierLanguage["Encontrados"].Value)";
        var _servicio = "@Html.Raw(GlobalIdentifierLanguage["_servicio"].Value)";

        var _msgSkillDelete = "@Html.Raw(GlobalIdentifierLanguage["Esta seguro que desea eliminar el skill:"].Value)";
        var _msgWorkgroupDelete = "@Html.Raw(GlobalIdentifierLanguage["Esta seguro que desea eliminar el workgroup:"].Value)";
        var _msgAcountDelete = "@Html.Raw(GlobalIdentifierLanguage["Estas seguro que quieres eliminar el usuario:"].Value)";

        var _msgDeleteTenant = "@Html.Raw(GlobalIdentifierLanguage["MessageDeleteTenant"].Value)";
        var _usuario = "@Html.Raw(GlobalIdentifierLanguage["Usuario"].Value)";

        var _chatLink_text = "@Html.Raw(GlobalIdentifierLanguage["Haga click aquí"].Value)";
        var _chatDownload_text = "@Html.Raw(GlobalIdentifierLanguage["Click para descargar"].Value)";
        var _chatLink_Video = "@Html.Raw(GlobalIdentifierLanguage["Haga clic aquí para iniciar la sesión de video"].Value)";

        var tooltipConfig = '@Html.Raw(GlobalIdentifierLanguage["Configuración visual"].Value)';

        var visualFont = '@Html.Raw(GlobalIdentifierLanguage["Tamaño de la Fuente"].Value)';
        var visualTheme = '@Html.Raw(GlobalIdentifierLanguage["Seleccionar Tema"].Value)';

        var urlToGui = '@Url.Action("Index", "Home")';
        var tooltipToGui = '@Html.Raw(GlobalIdentifierLanguage["Lynn"].Value)';
        var urlToLmc = '@Url.Action("Index", "Executive")';

        var tooltipToLMC = '@Html.Raw(GlobalIdentifierLanguage["Abrir LMC"].Value)';

        // --
        var tagHome = '@Url.Action("Index", "Home")';
        var tooltipHome = '@Html.Raw(GlobalIdentifierLanguage["Inicio"].Value)';
        var tooltipModulos = '@Html.Raw(GlobalIdentifierLanguage["Modulos"].Value)';
        var tagApiSecurity = '@Url.Action("Index", "ApiSecurity")';
        var tagServicesStatus = '@Url.Action("Index", "ServicesStatus")';
        var tooltipServicesStatus = '@Html.Raw(GlobalIdentifierLanguage["Estado de los servicios"].Value)';
        var tooltipSecurityApi = '@Html.Raw(GlobalIdentifierLanguage["Seguridad del API"].Value)';
        var tagAccount = '@Url.Action("Index", "Account")';
        var tooltipUser = '@Html.Raw(GlobalIdentifierLanguage["Usuarios"].Value)';
        var tagDocumentation = '@Url.Action("Index", "Documentation")';
        var tooltipDevelop = '@Html.Raw(GlobalIdentifierLanguage["Para Desarrolladores"].Value)';
        var tooltipConfig = '@Html.Raw(GlobalIdentifierLanguage["Configuración visual"].Value)';
        var _msgServicesExists = "@Html.Raw(GlobalIdentifierLanguage["Este servicio ya esta ocupado"].Value)";

        // --
        // var currentEnvironment = "@Environment";
        // var changeEnvironment = ("@Environment" == "production") ? "developer" : "production";
        var _msgConfirmationChangeEnvironment = "¿@Html.Raw(GlobalIdentifierLanguage["Desea cambiar el ambiente a"].Value)" + " " + changeEnvironment + "?";
        var urlChangeEnvironment = '@Url.Action("ChangeEnvironment", "Account")';
        // --

        // Notificaciones
        var titleIniciado = "@Html.Raw(GlobalIdentifierLanguage["Iniciado"].Value)";
        var titleFinalizado = "@Html.Raw(GlobalIdentifierLanguage["Finalizado"].Value)";
        var titlePendiente = "@Html.Raw(GlobalIdentifierLanguage["Pendiente"].Value)";
        var titleExitoso = "@Html.Raw(GlobalIdentifierLanguage["Exitoso"].Value)";
        var titleError = "@Html.Raw(GlobalIdentifierLanguage["Error"].Value)";
        var titleInformacion = "@Html.Raw(GlobalIdentifierLanguage["Informacion"].Value)";
        var titleWarning = "@Html.Raw(GlobalIdentifierLanguage["Warning"].Value)";
        var buttonAceptar = "@Html.Raw(GlobalIdentifierLanguage["Aceptar"].Value)";
        var verificationTitle = "@Html.Raw(GlobalIdentifierLanguage["Verificacion del tenant"].Value)";

        // PAP
        var _enablePAPFunctions = false;
        var _msgRealizarPAP = "@Html.Raw(GlobalIdentifierLanguage["Pase a Produccion"].Value)";
        var _msgRealizarRollBack = "@Html.Raw(GlobalIdentifierLanguage["Realizar RollBack"].Value)";
        var _msgEliminarTenant = "@Html.Raw(GlobalIdentifierLanguage["Eliminar Tenant"].Value)";
        var _msgCurrentTitlePAP = "@Html.Raw(GlobalIdentifierLanguage["Pase a Produccion"].Value)";
        var _msgCurrentTitlePAPSummary = "@Html.Raw(GlobalIdentifierLanguage["Deploy Finalizado"].Value)";

        var _msgStepPAP = "@Html.Raw(GlobalIdentifierLanguage["Paso"].Value)";
        var _msgElapsedPAP = "@Html.Raw(GlobalIdentifierLanguage["Tiempo"].Value)";

        // Cors validator
        var _msgCorsValidUrl = "@Html.Raw(GlobalIdentifierLanguage["Ingrese una URL válida"].Value)";
        var _msgCorsDuplicateUrl = "@Html.Raw(GlobalIdentifierLanguage["Ya existe la Url."].Value)";

        //Time Line PaP
        var _historic = "@Html.Raw(GlobalIdentifierLanguage["Historico"].Value)";
        var _msgTimeLineTenant = "@Html.Raw(GlobalIdentifierLanguage["Pasos a produccion"].Value)";
        var _msgTimeLineElement = "@Html.Raw(GlobalIdentifierLanguage["Historial del elemento"].Value)";
        var _intent = "@Html.Raw(GlobalIdentifierLanguage["Intencion"].Value)";
        var _case = "@Html.Raw(GlobalIdentifierLanguage["Caso"].Value)";
        var _action = "@Html.Raw(GlobalIdentifierLanguage["Accion"].Value)";
        var _entity = "@Html.Raw(GlobalIdentifierLanguage["Entidad"].Value)";
        // --
        // Connexión SignalR
        var _HubConnected = "@Html.Raw(GlobalIdentifierLanguage["Conectado"].Value)";
        var _HubReconnecting = "@Html.Raw(GlobalIdentifierLanguage["Reconectando"].Value)";
        var _HubDisconnected = "@Html.Raw(GlobalIdentifierLanguage["Desconectado"].Value)";

        //dashboard
        var _dashboardsAdministration = "@Html.Raw(GlobalIdentifierLanguage["Administración de gráficas"].Value)";
        var _msgSeleccionarReporte = "@Html.Raw(GlobalIdentifierLanguage["Selecionar Reportes"].Value)";
        var _msgConfigurarReporte = "@Html.Raw(GlobalIdentifierLanguage["Configurar Reportes"].Value)";
        var _msgEliminarReporte = "@Html.Raw(GlobalIdentifierLanguage["Eliminar Reportes"].Value)";
    </script>

    <!-- jquery
    ============================================ -->
    <script type="text/javascript" src="~/lib/jquery/jquery.min.js"></script>
    <script type="text/javascript" src="~/js/jquery.serializeObject.min.js"></script>
    <script type="text/javascript" src="~/vendor/jquery-mask/jquery.mask.min.js"></script>
    <!-- jquery-validate
    ============================================ -->
    <script type="text/javascript" src="~/lib/jquery-validate/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/lib/jquery-validate/additional-methods.min.js"></script>
@*     @{
        if (langValue == "es")
        {
            <script type="text/javascript" src="~/lib/jquery-validate/localization/messages_es.min.js"></script>
        }
        else if (langValue == "en")
        {
        }
        else
        {
            <script type="text/javascript" src="~/lib/jquery-validate/localization/messages_pt_BR.min.js"></script>
        }
    } *@
    <!-- bootstrap JS
    ============================================ -->
    <!--
        <script type="text/javascript" language="javascript" src="~/vendor/popper/popper.min.js"></script>
    -->
    <script type="text/javascript" src="~/lib/twitter-bootstrap-5/js/bootstrap.bundle.min.js"></script>
    <!-- Bootstrap Multicarousel JS
    ============================================ -->
    <script type="text/javascript" src="~/vendor/multi-carousel/multi-carousel.min.js"></script>
    <!-- nicescroll
    ============================================ -->
    <script type="text/javascript" src="~/vendor/jquery.nicescroll/jquery.nicescroll.min.js"></script>
    <!-- Kendo
    ============================================ -->
    <script type="text/javascript" language="javascript" src="~/vendor/kendo-ui/js/kendo.all.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/vendor/kendo-ui/kendo.aspnetmvc.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/vendor/kendo-ui/js/jszip.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/vendor/kendo-ui/js/cultures/kendo.culture.en-US.min.js"></script>
    <!-- Kendo Chat
    ============================================ -->
    <script src="~/vendor/markdown-it/markdown-it.min.js"></script>
    <script src="~/vendor/AdaptiveCards/adaptivecards.min.js"></script>
    <script>
        kendo.culture("en-US");
    </script>
@*     @{
        if (langValue == "es")
        {
            <script src="~/vendor/kendo-ui/js/messages/kendo.messages.es-ES.min.js"></script>
        }
        else if (langValue == "en")
        {
            <script src="~/vendor/kendo-ui/js/messages/kendo.messages.en-US.min.js"></script>
        }
        else if (langValue == "hi")
        {
            <script src="~/vendor/kendo-ui/js/messages/kendo.messages.hi-IN.min.js"></script>
        }
        else
        {
            <script src="~/vendor/kendo-ui/js/messages/kendo.messages.pt-PT.min.js"></script>
        } *@
    }

    <!-- Howler Audio
    ============================================ -->
    <script src="~/vendor/howler/howler.min.js"></script>
    <!-- File Saver
    ============================================ -->
    <script src="~/vendor/filesaver/dist/FileSaver.min.js"></script>
    <!-- SignalR
    ============================================ -->
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/Hubs/telemetry.js?v=@ViewBag.ImplementationVersionJS"></script>
    <!-- Editor ACE
    ============================================ -->
    <script src="~/vendor/ace-editor/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/vendor/ace-editor/ext-language_tools.js" type="text/javascript" charset="utf-8"></script>
    <!-- Tooptip On Cursor
    ============================================ -->
    <script src="~/vendor/tooltip-cursor.js?v=@ViewBag.ImplementationVersionJS" type="text/javascript" charset="utf-8"></script>
    <!-- Custom
    ============================================ -->
    <script type="text/javascript" src="~/js/default-2024.js?v=@ViewBag.ImplementationVersionJS"></script>

    <script>
        var layoutHeightLayout = $(".main-wrapper .main").outerHeight();

        var windowHelp = $("#windowHelp").kendoWindow({
            title: "Ayuda",
            visible: false,
            //content: url,
            width: "350px",
            height: "450px",
            //position: {
            //    top: "10%",
            //    left: "65%"
            //},
        }).data("kendoWindow");

        @if (SignInManager.IsSignedIn(User))
        {
            <text>
                let SetUrlHomeSideBar;
            let SetUrlTarificationSideBar;
            let SetListDivisionsByTenant;
            let PopulateDashboardSidebar;

            $(document).ready(function () {

                // --------------------------------------
                // Error: Dialogo de la conexion
                // --------------------------------------
                (function () {
                    $("#dialogConnectionClose").kendoDialog({
                        width: "450px",
                        title: "@Html.Raw(GlobalIdentifierLanguage["Error de Conexion"].Value)",
                        closable: false,
                        modal: true,
                        visible: false,
                        content: "@Html.Raw(GlobalIdentifierLanguage["msgConnectionError"].Value)",
                        actions: [
                            {
                                text: '@Html.Raw(GlobalIdentifierLanguage["Recargar"].Value)',
                                primary: true,
                                action: function (e) {
                                    location.reload();
                                }
                            }
                        ],
                        close: function () {
                            return false;
                        }
                    });

                    const dialogConnectionObj = $("#dialogConnectionClose").data("kendoDialog");
                    dialogConnectionObj.wrapper.addClass("k-dialog-error");
                })();

                // --------------------------------------
                // Cluster Loading
                // --------------------------------------
                $("#cluster-balancing").click(function (e) {
                    e.preventDefault();

                    const url = $(this).data("url");
                    const title = $(this).data('title');

                    const viewHeight = getViewportHeight();
                    const dialog = $("#windowDefault").data("kendoWindow");

                    windowDefault.content("");
                    kendo.ui.progress(dialog.element, true);

                    dialog
                        .title(title)
                        .setOptions({
                            width: "80%",
                            height: viewHeight
                        });

                    dialog.refresh({
                        url: url,
                    });

                    dialog.center().open();
                });

                // --------------------------------------
                // Notificaciones
                // --------------------------------------
                $('.notification-info').click(function (e) {
                    e.preventDefault();

                    var url = $(this).data("url");
                    var title = $(this).data("title");

                    $.ajax({
                        url: url,
                        success: function (result) {
                            windowDefault.title(title);
                            windowDefault.setOptions({
                                width: "650px",
                                height: (layoutHeightLayout - 49),
                            });
                            windowDefault.content(result);

                            windowDefault.center().open();
                        },
                        error: function (result) {
                            //console.log(result);
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();
                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });

                });

                // --------------------------------------
                // Servicebus
                // --------------------------------------
                $(".btn-reset-servicebus").click(function (e) {
                    e.preventDefault();

                    $.ajax({
                        url: $(this).attr('href'),
                        success: function (result) {
                        },
                        error: function (result) {
                        }
                    });
                });

                // --------------------------------------
                // SKILLS
                // --------------------------------------
                $(".show-skills").on("click", function (e) {
                    e.preventDefault();

                    $("#skillList").data("kendoDropDownList").dataSource.read();
                    $('#skillList').data('kendoDropDownList').open()
                });

                $("#skillList").kendoDropDownList({
                    dataSource: new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: "@Url.Action("GetElements", "Skill", new { })",
                                dataType: "json"
                                //dataType: "jsonp"
                            }
                        },
                        requestStart: function (e) {
                        }
                    }),
                    dataTextField: "name",
                    dataValueField: "id",
                    /*
                    templateOld: `<a href="javascript:editSkill(\'#:data.id#\');" title="Editar" class="k-link"><i class="k-icon k-i-edit"></i></a>
                        <a href="javascript:deleteSkill(\'#:data.id#\', \'#:data.name#\');" title="Eliminar" class="k-link"><i class="fa fa-trash" aria-hidden="true"></i></a>
                        <span>#:data.name# (#:data.tenantName#)</span>`,
                    */
                    template: function (dataItem) {
                        return `<a href="javascript:editSkill(\'${dataItem.id}\');" title="Editar" class="k-link"><i class="k-icon k-i-edit"></i></a>
                                <a href="javascript:deleteSkill(\'${dataItem.id}\', \'${dataItem.name}\');" title="Eliminar" class="k-link"><i class="fa fa-trash" aria-hidden="true"></i></a>
                                <span>${dataItem.name}</span>
                                <div class="dropdownlist-info">${dataItem.tenantName} (${dataItem.tenant})</div>`;
                    },
                    footerTemplate: function () {
                        const dropdown = this;
                        return `<div class="k-list-footer-wrapper">
                                        <span>${_msgEncontrados}: ${dropdown.dataSource.total()}</span>
                                        <a href="javascript:addSkill();" title="Nuevo" class="k-link"><i class="fa fa-plus-circle" aria-hidden="true"></i></a>
                                    </div>`;
                    },

                    filter: "contains",
                    height: 350,
                    autoWidth: true,
                    filtering: function (e) {
                        //get filter descriptor
                        //var filter = e.filter;
                    },
                    select: function (e) {
                        //var selectedDataItem = this.dataItem(e.item.index());
                        //console.log(selectedDataItem.name);

                        // Asignar Valor a Copiar
                        //copyToClipboard(selectedDataItem.name);
                    }

                });
                //var skillList = $("#skillList").data("kendoDropDownList");

                addSkill = function () {
                    var urlAdd = "@Url.Action("Add", "Skill", new { })";

                    windowDefault.setOptions({
                        width: "30%",
                        height: "280px",
                        progress: false
                    });
                    windowDefault.title("@Html.Raw(GlobalIdentifierLanguage["Agregar Skill"].Value)");

                    $.ajax({
                        url: urlAdd,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                editSkill = function (id) {
                    var urlEdit = "@Url.Action("Edit", "Skill", new { })";

                    windowDefault.setOptions({
                        width: "30%",
                        height: "280px",
                        progress: false
                    });
                    windowDefault.title("@Html.Raw(GlobalIdentifierLanguage["Editar Skill"].Value)");

                    $.ajax({
                        url: urlEdit + "?id=" + id,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                $("body").on("submit", ".skillSubmit", function (e) {
                    e.preventDefault();

                    $('#buttonSubmitForm').prop('disabled', true);

                    var actionUrl = e.currentTarget.action;
                    $.ajax({
                        url: actionUrl,
                        type: "post",
                        //dataType: "application/json",
                        data: $(this).serialize(),
                        success: function (result, textStatus, xhr) {
                            if (xhr.status == 200) {
                                // Refrescar lista de las entidades
                                $("#skillList").data("kendoDropDownList").dataSource.read();

                                //dialogMessage.content(_msgTareaExitosa);
                                //dialogMessage.open();

                                windowDefault.close();
                            } else {
                                windowDefault.content(result);
                            }
                        },
                        complete: function (xhr, textStatus) {
                        },
                        error: function (result, textStatus, errorThrown) {
                            $('#buttonSubmitForm').prop('disabled', false);
                            console.log("error: ", errorThrown);
                            if (result.status == 403) {
                                windowDefault.close();

                                dialogMessage.content(_msgAccessDenied);
                                dialogMessage.open();
                            }
                        }
                    });
                });

                $('#skillConfirm').kendoDialog({
                    width: "350px",
                    title: _msgConfirmacion,
                    closable: true,
                    modal: true,
                    content: "",
                    visible: false,
                    actions: [{
                        text: "OK",
                        action: function (e) {
                            $.ajax({
                                url: "@Url.Action("Delete", "Skill", new { })" + "?skill=" + idSkillDelete,
                                success: function (result) {
                                    $("#skillList").data("kendoDropDownList").dataSource.read();

                                    //dialogMessage.content(_msgTareaExitosa);
                                    //dialogMessage.open();
                                },
                            });

                            return true;
                        },
                        primary: true
                    },
                    {
                        text: _msgCancelar
                    }
                    ]
                });
                var skillConfirm = $('#skillConfirm').data("kendoDialog");

                var idSkillDelete;
                deleteSkill = function (id, name) {
                    idSkillDelete = id;

                    skillConfirm.content(_msgSkillDelete + " " + name);
                    skillConfirm.open();
                };

                // --------------------------------------
                // WORKGROUPS
                // --------------------------------------
                $(".show-workgroups").on("click", function (e) {
                    e.preventDefault();

                    $("#workgroupList").data("kendoDropDownList").dataSource.read();
                    $('#workgroupList').data('kendoDropDownList').open()
                });

                $("#workgroupList").kendoDropDownList({
                    dataSource: new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: "@Url.Action("GetElements", "Workgroup", new { })",
                                dataType: "json"
                                //dataType: "jsonp"
                            }
                        },
                        requestStart: function (e) {
                        }
                    }),
                    dataTextField: "name",
                    dataValueField: "id",
                    /*
                    templateOld: `<a href="javascript:editWorkgroup(\'#:data.id#\');" title="Editar" class="k-link"><i class="k-icon k-i-edit"></i></a>
                        <a href="javascript:deleteWorkgroup(\'#:data.id#\', \'#:data.name#\');" title="Eliminar" class="k-link"><i class="fa fa-trash" aria-hidden="true"></i></a>
                        <span>#:data.name# (#:data.tenantName#)</span>`,
                    */
                    template: function (dataItem) {
                        return `<a href="javascript:editWorkgroup(\'${dataItem.id}\');" title="Editar" class="k-link"><i class="k-icon k-i-edit"></i></a>
                                <a href="javascript:deleteWorkgroup(\'${dataItem.id}\', \'${dataItem.name}\');" title="Eliminar" class="k-link"><i class="fa fa-trash" aria-hidden="true"></i></a>
                                <span>${dataItem.name}</span>
                                <div class="dropdownlist-info">${dataItem.tenantName} (${dataItem.tenant})</div>`;
                    },
                    footerTemplate: function () {
                        const dropdown = this;
                        return `<div class="k-list-footer-wrapper">
                                            <span>${_msgEncontrados}: ${dropdown.dataSource.total()}</span>
                                            <a href="javascript:addWorkgroup();" title="Nuevo" class="k-link"><i class="fa fa-plus-circle" aria-hidden="true"></i></a>
                                        </div>`;
                    },

                    filter: "contains",
                    height: 350,
                    autoWidth: true,
                    filtering: function (e) {
                        //get filter descriptor
                        //var filter = e.filter;
                    },
                    select: function (e) {
                        //var selectedDataItem = this.dataItem(e.item.index());
                        //console.log(selectedDataItem.name);

                        // Asignar Valor a Copiar
                        //copyToClipboard(selectedDataItem.name);
                    }

                });
                //var workgroupList = $("#workgroupList").data("kendoDropDownList");

                addWorkgroup = function () {
                    var urlAdd = "@Url.Action("Add", "Workgroup", new { })";

                    windowDefault.setOptions({
                        width: "50%",
                        height: "550px",
                        progress: false
                    });
                    windowDefault.title("@Html.Raw(GlobalIdentifierLanguage["Agregar Workgroup"].Value)");

                    $.ajax({
                        url: urlAdd,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                editWorkgroup = function (id) {
                    var urlEdit = "@Url.Action("Edit", "Workgroup", new { })";

                    windowDefault.setOptions({
                        width: "50%",
                        height: "550px",
                        progress: false
                    });
                    windowDefault.title("@Html.Raw(GlobalIdentifierLanguage["Editar Workgroup"].Value)");

                    $.ajax({
                        url: urlEdit + "?id=" + id,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                $("body").on("submit", ".workgroupSubmit", function (e) {
                    e.preventDefault();

                    $('#buttonSubmitForm').prop('disabled', true);

                    var actionUrl = e.currentTarget.action;
                    $.ajax({
                        url: actionUrl,
                        type: "post",
                        //dataType: "application/json",
                        data: $(this).serialize(),
                        success: function (result, textStatus, xhr) {
                            if (xhr.status == 200) {
                                // Refrescar lista de las entidades
                                $("#workgroupList").data("kendoDropDownList").dataSource.read();

                                //dialogMessage.content(_msgTareaExitosa);
                                //dialogMessage.open();

                                windowDefault.close();
                            } else {
                                windowDefault.content(result);
                            }
                        },
                        complete: function (xhr, textStatus) {
                        },
                        error: function (result, textStatus, errorThrown) {
                            $('#buttonSubmitForm').prop('disabled', false);
                            console.log("error: ", errorThrown);
                            if (result.status == 403) {
                                windowDefault.close();

                                dialogMessage.content(_msgAccessDenied);
                                dialogMessage.open();
                            }
                        }
                    });
                });

                $('#workgroupConfirm').kendoDialog({
                    width: "350px",
                    title: _msgConfirmacion,
                    closable: true,
                    modal: true,
                    content: "",
                    visible: false,
                    actions: [{
                        text: "OK",
                        action: function (e) {
                            $.ajax({
                                url: "@Url.Action("Delete", "Workgroup", new { })" + "?workgroup=" + idWorkgroupDelete,
                                success: function (result) {
                                    $("#workgroupList").data("kendoDropDownList").dataSource.read();

                                    //dialogMessage.content(_msgTareaExitosa);
                                    //dialogMessage.open();
                                },
                            });

                            return true;
                        },
                        primary: true
                    },
                    {
                        text: _msgCancelar
                    }
                    ]
                });
                var workgroupConfirm = $('#workgroupConfirm').data("kendoDialog");

                var idWorkgroupDelete;
                deleteWorkgroup = function (id, name) {
                    idWorkgroupDelete = id;

                    workgroupConfirm.content(_msgWorkgroupDelete + " " + name);
                    workgroupConfirm.open();
                };

                // --------------------------------------
                // USUARIOS
                // --------------------------------------
                $(".show-users").on("click", function (e) {
                    e.preventDefault();

                    $("#userList").data("kendoDropDownList").dataSource.read();
                    $('#userList').data('kendoDropDownList').open()
                });

                $("#userList").kendoDropDownList({
                    dataSource: new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: "@Url.Action("GetElements", "Account", new { })",
                                dataType: "json"
                                //dataType: "jsonp"
                            }
                        },
                        requestStart: function (e) {
                        },
                        error: function (e) {
                            //console.log("error", e);
                        }
                    }),
                    dataTextField: "name",
                    dataValueField: "id",
                    template: function (dataItem) {
                        return `<a href="javascript:editUser('${dataItem.id}');" title="Editar" class="k-link">
                                        <i class="k-icon k-i-edit"></i>
                                    </a>
                                    <a href="javascript:deleteUser('${dataItem.id}', '${dataItem.name}');" title="Eliminar" class="k-link"><i class="fa fa-trash" aria-hidden="true"></i></a>
                                    <a href="javascript:configUser('${dataItem.id}');" title="Configurar" class="k-link" style_="display:none"><i class="fas fa-cog" aria-hidden="true"></i></a>
                                    <span>${dataItem.name}</span>
                                <div>(${dataItem.email})</div>`;
                    },
                    footerTemplate: function () {
                        const dropdown = this;
                        return `<div class="k-list-footer-wrapper">
                                            <span>${_msgEncontrados}: ${dropdown.dataSource.total()}</span>
                                            <a href="javascript:addUser();" title="Nuevo" class="k-link"><i class="fa fa-plus-circle" aria-hidden="true"></i></a>
                                        </div>`;
                    },

                    filter: "contains",
                    height: 350,
                    autoWidth: true,
                    filtering: function (e) {
                        //get filter descriptor
                        //var filter = e.filter;
                    },
                    select: function (e) {
                        //var selectedDataItem = this.dataItem(e.item.index());
                        //console.log(selectedDataItem.name);

                        // Asignar Valor a Copiar
                        //copyToClipboard(selectedDataItem.name);
                    }

                });
                //var userList = $("#userList").data("kendoDropDownList");

                addUser = function () {
                    var urlAdd = "@Url.Action("AddExecutive", "Account", new { })";

                    windowDefault.setOptions({
                        width: "50%",
                        //height: "500px",
                        height: (layoutHeightLayout - 49),
                        progress: false
                    });
                    windowDefault.title("@Html.Raw(GlobalIdentifierLanguage["Agregar Usuario"].Value)");

                    $.ajax({
                        url: urlAdd,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                editUser = function (id) {
                    var urlEdit = "@Url.Action("EditExecutive", "Account", new { })";

                    windowDefault.setOptions({
                        width: "50%",
                        //height: "500px",
                        height: (layoutHeightLayout - 49),
                        progress: false
                    });
                    windowDefault.title('@Html.Raw(GlobalIdentifierLanguage["Editar Usuario"].Value)');

                    $.ajax({
                        url: urlEdit + "?iduser=" + id,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                $('#userConfirm').kendoDialog({
                    width: "350px",
                    title: _msgConfirmacion,
                    closable: true,
                    modal: true,
                    content: "",
                    visible: false,
                    actions: [{
                        text: "OK",
                        action: function (e) {
                            $.ajax({
                                url: "@Url.Action("DeleteExecutive", "Account", new { })" + "?iduser=" + idUserDelete,
                                success: function (result) {
                                    if (result.success) {
                                        $("#userList").data("kendoDropDownList").dataSource.read();

                                        dialogMessage.content(_msgTareaExitosa);
                                        dialogMessage.open();
                                    } else {
                                        // Error por notificacion
                                    }
                                }
                            });

                            return true;
                        },
                        primary: true
                    },
                    {
                        text: _msgCancelar
                    }
                    ]
                });
                var userConfirm = $('#userConfirm').data("kendoDialog");

                var idUserDelete;
                deleteUser = function (id, name) {
                    idUserDelete = id;

                    userConfirm.content(_msgAcountDelete + " " + name);
                    userConfirm.open();
                };

                configUser = function (id) {
                    var urlEdit = "@Url.Action("ExecutiveConfig", "Account", new { })";

                    windowDefault.setOptions({
                        width: "60%",
                        height: "auto",
                        progress: false
                    });
                    windowDefault.title("@Html.Raw(GlobalIdentifierLanguage["Configurar Ejecutivo"].Value)");

                    $.ajax({
                        url: urlEdit + "?iduser=" + id,
                        success: function (result) {
                            windowDefault.content(result);
                            windowDefault.center().open();
                        },
                        error: function (result) {
                            if (result.status == 403) {
                                var msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                };

                // --------------------------------------
                // Sumary
                // --------------------------------------
                $(document).on("click", ".btn-summary-ignore", function (e) {
                    const wnd = $("#windowPAPSummary").data("kendoWindow");
                    wnd.close();
                });

                $(document).on("click", ".btn-summary-download", function (e) {
                    const content = listPAPSummary.map(e => e.join(",")).join("\n");

                    const csvContent = "data:text/csv;charset=utf-8,%EF%BB%BF" + encodeURIComponent(content)

                    const link = document.createElement("a");
                    link.setAttribute("href", csvContent);
                    link.setAttribute("download", "pap-summary.csv");
                    document.body.appendChild(link);

                    link.click(); // This will download the data file named "my_data.csv".

                    document.body.removeChild(link);
                });

                $(document).on("click", ".btn-summary-diagram", function (e) {
                    //window.location.href = '...';
                    const id = $(this).data("tenant");

                    const idWindow = `#window-division-${id}`;
                    let window = $(idWindow).data("kendoWindow");
                    if (!window) {
                        $(idWindow).kendoWindow({
                            title: "@Html.Raw(GlobalIdentifierLanguage["Divisiones"].Value)",

                            width: "350px",
                            height: "250px",

                            visible: false,
                            modal: true,
                            resizable: false,
                            scrollable: true,

                            open: function (e) {
                                const elem = e.sender.element;

                                const idTree = `#treeview-division-${id}`;
                                const tree = $(idTree).data("kendoTreeView");
                                if (!tree) {
                                    const data = dataTreeForDiagram[`tree-data-${id}`];
                                    $(idTree).kendoTreeView({
                                        dataSource: new kendo.data.HierarchicalDataSource({
                                            data: data,
                                            schema: {
                                                model: {
                                                    children: "items"
                                                }
                                            }
                                        }),
                                        //dataTextField: ["categoryName", "subCategoryName"]
                                        dataTextField: "name",
                                        //loadOnDemand: false,
                                        //autoScroll: true,
                                        select: function (e) {
                                            const dataItem = this.dataItem(e.node);
                                            if (dataItem.type == "category" && !dataItem.hasChildren) {
                                                location.href = "@Url.Action("Index", "Diagram", new { })?tenant=" + dataItem.tenantId + "&division=" + dataItem.id;
                                            } else if (dataItem.type == "category" && dataItem.hasChildren) {
                                                this.expand(e.node);
                                            } else if (dataItem.type == "detail") {
                                                location.href = "@Url.Action("Index", "Diagram", new { })?tenant=" + dataItem.tenantId + "&layout=" + dataItem.id + "&division=" + dataItem.divisionId;
                                            }
                                        }
                                    });
                                }
                            },
                            close: function (e) {
                            },
                            deactivate: function (e) {
                            },
                        });
                        window = $(idWindow).data("kendoWindow");
                        window.content(`<div id="treeview-division-${id}" class="tree-view"></div>`);
                    }
                    window.center().open();
                });

                // --------------------------------------
                // Home
                // --------------------------------------
                SetUrlHomeSideBar = (tenant) => {
                    $(".sidebar-home").removeClass("disabled");
                    if ($('#btn-home-sidebar').length) {
                        const lnkDiagram = $('#btn-home-sidebar');

                        url = "@Url.Action("Index", "Home", new { })";
                        lnkDiagram.attr("href", `${url}?tenant=${tenant}`);
                    }
                };

                // --------------------------------------
                // Tarificacion
                // --------------------------------------
                SetUrlTarificationSideBar = (tenant) => {
                    $(".sidebar-tarification").removeClass("disabled");
                    if ($('#btn-tarification-sidebar').length) {
                        const lnkDiagram = $('#btn-tarification-sidebar');

                        url = "@Url.Action("Index", "TransactionMeterV2", new { })";
                        lnkDiagram.attr("href", `${url}?tenant=${tenant}`);
                    }
                };

                // --------------------------------------
                // PAP
                // --------------------------------------
                SetUrlDeploySideBar = (tenant) => {
                    $(".sidebar-deploy").removeClass("disabled");
                    if ($('#btn-deploy-sidebar').length) {
                        const lnkDiagram = $('#btn-deploy-sidebar');

                        url = "@Url.Action("Index", "Deploy", new { })";
                        lnkDiagram.attr("href", `${url}?tenant=${tenant}`);
                    }
                };

                // --------------------------------------
                // Notification
                // --------------------------------------
                SetUrlNotificationSideBar = (tenant) => {
                    $(".sidebar-notification").removeClass("disabled");
                    if ($('#btn-notification-sidebar').length) {
                        const lnkDiagram = $('#btn-notification-sidebar');

                        url = "@Url.Action("RegisterType", "Notification", new { })";
                        lnkDiagram.data("url", `${url}?tenant=${tenant}`);
                    }
                };

                $(".sidebar-general").removeClass("disabled");

                // --------------------------------------
                // Ventana Divisiones / Diagramas
                // --------------------------------------
                SetListDivisionsByTenant = (tenant, divisions, diagrams) => {
                    $(".sidebar-diagram").removeClass("disabled");
                    $(".sidebar-outbound").removeClass("disabled");

                    const CreateWindowDiagrama = (treeList) => {
                        const idWindow = "#window-division-sidebar";
                        if ($(idWindow).length) {
                            let windowDiagram = $(idWindow).data("kendoWindow");
                            if (typeof windowDiagram === 'undefined') {
                                windowDiagram = $(idWindow).kendoWindow({
                                    title: "@Html.Raw(GlobalIdentifierLanguage["Divisiones"].Value)",

                                    width: "350px",
                                    height: "250px",

                                    visible: false,
                                    modal: true,
                                    resizable: false,
                                    scrollable: true,

                                    open: function (e) {
                                        const win = this;
                                        //const elem = e.sender.element;

                                        const idTree = "#treeview-division-sidebar";
                                        //const id = $(idTree).data("tenant");
                                        const tree = $(idTree).data("kendoTreeView");

                                        const data = new kendo.data.HierarchicalDataSource({
                                            data: win.options.dataTree,
                                            schema: {
                                                model: {
                                                    children: "items"
                                                }
                                            }
                                        });

                                        if (tree) {
                                            tree.setDataSource(data);
                                        } else {
                                            $(idTree).kendoTreeView({
                                                dataSource: data,
                                                //dataTextField: ["categoryName", "subCategoryName"]
                                                dataTextField: "name",
                                                //loadOnDemand: false,
                                                //autoScroll: true,
                                                select: function (e) {
                                                    const dataItem = this.dataItem(e.node);
                                                    if (dataItem.type == "category" && !dataItem.hasChildren) {
                                                        location.href = "@Url.Action("Index", "Diagram", new { })?tenant=" + dataItem.tenantId + "&division=" + dataItem.id;
                                                    } else if (dataItem.type == "category" && dataItem.hasChildren) {
                                                        this.expand(e.node);
                                                    } else if (dataItem.type == "detail") {
                                                        location.href = "@Url.Action("Index", "Diagram", new { })?tenant=" + dataItem.tenantId + "&division=" + dataItem.divisionId + "&layout=" + dataItem.id;
                                                    }
                                                }
                                            });
                                        }
                                    },
                                    close: function (e) {
                                    },
                                    deactivate: function (e) {
                                    },
                                }).data("kendoWindow");


                                windowDiagram.options.dataTree = treeList;
                                windowDiagram.content(`<div id="treeview-division-sidebar" class="tree-view"></div>`);
                            }
                        }
                    };

                    const CreateWindowOutbound = (treeList) => {
                        const idWindow = "#window-outbound-sidebar";
                        if ($(idWindow).length) {
                            let windowOubound = $(idWindow).data("kendoWindow");
                            if (typeof windowOubound === 'undefined') {
                                windowOubound = $(idWindow).kendoWindow({
                                    title: "@Html.Raw(GlobalIdentifierLanguage["Divisiones"].Value)",

                                    width: "350px",
                                    height: "250px",

                                    visible: false,
                                    modal: true,
                                    resizable: false,
                                    scrollable: true,

                                    open: function (e) {
                                        const win = this;
                                        //const elem = e.sender.element;

                                        const idTree = `#treeview-outbound-sidebar`;
                                        //const id = $(idTree).data("tenant");
                                        const tree = $(idTree).data("kendoTreeView");

                                        const data = new kendo.data.HierarchicalDataSource({
                                            data: win.options.dataTree,
                                            schema: {
                                                model: {
                                                    children: "items"
                                                }
                                            }
                                        });

                                        if (tree) {
                                            tree.setDataSource(data);
                                        } else {
                                            $(idTree).kendoTreeView({
                                                dataSource: data,
                                                //dataTextField: ["categoryName", "subCategoryName"]
                                                dataTextField: "name",
                                                //loadOnDemand: false,
                                                //autoScroll: true,
                                                select: function (e) {
                                                    const dataItem = this.dataItem(e.node);
                                                    if (dataItem.type == "category" && !dataItem.hasChildren) {
                                                        location.href = "@Url.Action("Index", "Outbound", new { })?tenant=" + dataItem.tenantId + "&division=" + dataItem.id;
                                                    }
                                                }
                                            });
                                        }
                                    },
                                    close: function (e) {
                                    },
                                    deactivate: function (e) {
                                    },
                                }).data("kendoWindow");

                                windowOubound.options.dataTree = treeList;
                                windowOubound.content(`<div id="treeview-outbound-sidebar" class="tree-view"></div>`);
                            }
                        }
                    };

                    let treeListDiagram = [];
                    let treeListOutbound = [];
                    divisions.forEach(function (div) {
                        let shilds = [];
                        diagrams.filter(s => (s.divisionId === div.id || (div.number === 1 && s.divisionId === null))).forEach(function (diag) {
                            shilds.push({
                                type: "detail",
                                id: diag.id,
                                tenantId: diag.tenantId,
                                name: diag.name,
                                divisionId: div.id
                            });
                        });

                        treeListDiagram.push({
                            type: "category",
                            expanded: false,
                            id: div.id,
                            tenantId: div.tenantId,
                            name: `${div.name} (${div.number})`,
                            items: shilds
                        });

                        treeListOutbound.push({
                            type: "category",
                            expanded: false,
                            id: div.id,
                            tenantId: div.tenantId,
                            name: `${div.name} (${div.number})`,
                            items: []
                        });
                    });

                    if ($('#btn-diagram-sidebar').length) {
                        const lnkDiagram = $('#btn-diagram-sidebar');

                        let url = "#";
                        if (divisions.length === 0 && diagrams.length === 0) {
                            url = `/Diagram/Initial?tenant=${tenant}`;
                        } else if (divisions.length === 1 && diagrams.length === 0) {
                            const div = divisions[0];
                            url = `/Diagram/Index?tenant=${tenant}&division=${div.id}`;
                        } else if (divisions.length === 1 && diagrams.length === 1) {
                            const div = divisions[0];
                            const diag = diagrams[0];
                            url = `/Diagram/Index?tenant=${tenant}&division=${div.id}&layout=${diag.id}`;
                        } else {
                            lnkDiagram.addClass("btn-diagram-divisions-show");
                            CreateWindowDiagrama(treeListDiagram);
                        }
                        lnkDiagram.attr("href", url);
                    }

                    if ($('#btn-outbound-sidebar').length) {
                        const lnkOutbound = $('#btn-outbound-sidebar');

                        url = "#";
                        if (divisions.length === 0) {
                            url = `/Outbound/Index?tenant=${tenant}`;
                        } else if (divisions.length === 1) {
                            const div = divisions[0];
                            url = `/Outbound/Index?tenant=${tenant}&division=${div.id}`;
                        } else {
                            lnkOutbound.addClass("btn-outbound-divisions-show");
                            CreateWindowOutbound(treeListOutbound);
                        }
                        lnkOutbound.attr("href", url);
                    }

                };

                $("body").on('click', ".btn-diagram-divisions-show", function (e) {
                    e.preventDefault();

                    const window = $("#window-division-sidebar").data("kendoWindow");
                    window.center().open();
                });

                $("body").on('click', ".btn-outbound-divisions-show", function (e) {
                    e.preventDefault();

                    const window = $("#window-outbound-sidebar").data("kendoWindow");
                    window.center().open();
                });

                // --------------------------------------
                // Dashboard
                // --------------------------------------
                if (typeof $("#windowDashboardAdminSidebar").data("kendoWindow") === 'undefined') {
                    $("#windowDashboardAdminSidebar").kendoWindow({
                        title: "Test",
                        visible: false,
                        modal: true,
                        resizable: true,
                        scrollable: true,
                        width: "120px",
                        position: {
                            //top: "5px"
                        },
                        actions: [
                            "Close"
                        ],
                        open: function (e) {
                        },
                        close: function (e) {
                            if (typeof PopulateDashboardSidebar !== 'undefined') {
                                PopulateDashboardSidebar();
                            }
                            try {
                                const dropDownDashboard = $("#dashboardListSidebar").data("kendoDropDownList");
                                dropDownDashboard.close();
                            } catch { }
                        }
                    });
                }

                PopulateDashboardSidebar = (tenant, division, nDivision) => {
                    $(".sidebar-dashboard").removeClass("disabled");

                    if ($('#btn-dashboard-sidebar').length) {
                        const idDropDown = "#dashboardListSidebar";
                        let dropdown = $(idDropDown).data("kendoDropDownList");
                        if (typeof dropdown === 'undefined') {
                            dropdown = $(idDropDown).kendoDropDownList({
                                dataSource: [],
                                dataTextField: "name",
                                dataValueField: "id",
                                template: function (dataItem) {
                                    return `<i class="k-icon far fa-chart-bar"></i> <span>${dataItem.title}</span>`;
                                },
                                footerTemplate: function () {
                                    const dropdown = this;
                                    const idTenant = dropdown.options.idTenant;
                                    const idDivision = dropdown.options.idDivision;
                                    const nDivision = dropdown.options.nDivision;

                                    return `<div class="k-list-footer-wrapper">
                                                <span>${_msgEncontrados}: ${dropdown.dataSource.total()}</span>
                                                <a href="#" class="k-link btn-dashboard-admin" data-tenant="${idTenant}" data-division="${idDivision}" data-ndivision="${nDivision}" title="${_dashboardsAdministration}">
                                                    <span class="k-icon k-i-gear"></span>
                                                </a>
                                            </div>`;
                                },

                                filter: "contains",
                                height: 500,
                                autoWidth: true,
                                filtering: function (e) {
                                    //get filter descriptor
                                    //const filter = e.filter;
                                },
                                select: function (e) {
                                    const dropdown = this;
                                    const item = e.item;
                                    //const text = item.text();

                                    const idTenant = dropdown.options.idTenant;
                                    const idDivision = dropdown.options.idDivision;
                                    const nDivision = dropdown.options.nDivision;

                                    const selectedDataItem = this.dataItem(item.index());
                                    $.ajax({
                                        url: siteRootUrl + '/Report/CheckDashBoardELK?tenant=' + idTenant + '&idDashboard=' + selectedDataItem.id,
                                        success: function (result) {
                                            //console.log('CheckDashBoardELK: ', result)
                                            if (result) {
                                                const url = `/Dashboard?tenant=${idTenant}&idDashboard=${selectedDataItem.id}&idDivision=${idDivision}`;
                                                $(location).attr("href", url);
                                            } else {
                                                dialogMessage.content("Dashboard no encontrado, por favor verifique que exista en Kibana");
                                                dialogMessage.open();
                                            }

                                        },
                                        error: function (result) {
                                            if (result.status === 403) {
                                                const msg = $("#accessDenied").html();

                                                windowDefault.content(msg);
                                                windowDefault.center().open();
                                            }
                                        }
                                    });
                                }

                            }).data("kendoDropDownList");

                            dropdown.options.idTenant = tenant;
                            dropdown.options.idDivision = division;
                            dropdown.options.nDivision = nDivision;
                        }

                        {
                            const idTenant = dropdown.options.idTenant;
                            const nDivision = dropdown.options.nDivision;
                            $.ajax({
                                url: siteRootUrl + '/Report/ListDashboardByDivision?tenant=' + idTenant + '&division=' + nDivision,
                                type: "get",
                                data: {
                                },
                                success: function (result, textStatus, xhr) {
                                    /*
                                    $("#filterDashBoard").hide();
                                    if (dashboardListResult.length > 0) {
                                        $("#filterDashBoard").show();
                                    }
                                    */

                                    const dashboardList = $("#dashboardListSidebar").data("kendoDropDownList");

                                    let dataSourcedashboardList = [];
                                    let dashboardListResult = result;
                                    dashboardListResult.forEach(function (element) {
                                        dataSourcedashboardList.push({ "id": element.dashboardId, "tenant": element.tenantId, "title": element.title, "description": element.description });
                                    });
                                    dashboardList.setDataSource(dataSourcedashboardList);
                                },
                                error: function (result, textStatus, errorThrown) {
                                    //console.error("error: ",errorThrown);
                                    if (result.status === 403) {
                                    }
                                }
                            });
                        }

                    }
                };

                $("#btn-dashboard-sidebar").click(function (e) {
                    $('#dashboardListSidebar').data('kendoDropDownList').open();
                });

                $("body").on('click', ".btn-dashboard-admin", function (e) {
                    e.preventDefault();

                    const elem = $(this);
                    const idTenant = elem.data("tenant");
                    const idDivision = elem.data("division");
                    const nDivision = elem.data("ndivision");

                    $.ajax({
                        url: siteRootUrl + '/Report/DashboardList?tenant=' + idTenant + '&division=' + nDivision + '&idDivision=' + idDivision,
                        success: function (result) {
                            viewHeight = getViewportHeight();

                            const windowDashboard = $("#windowDashboardAdminSidebar").data("kendoWindow");
                            windowDashboard.title(_dashboardsAdministration);

                            windowDashboard.setOptions({
                                width: "1070",
                                height: (viewHeight - 70)
                            });

                            windowDashboard.content(result);
                            windowDashboard.center().open();
                        },
                        error: function (result) {
                            if (result.status === 403) {
                                const msg = $("#accessDenied").html();

                                windowDefault.content(msg);
                                windowDefault.center().open();
                            }
                        }
                    });
                });

                @*
                $('.config-dashboard').click(function () {
                $.ajax({
                url: siteRootUrl + '/Dashboard/ConfigCustomDashboard?tenant=' + idTenant,
                success: function (result) {
                windowDefault.setOptions({
                width: "90%",
                height: "auto",
                progress: false
                });
                windowDefault.content(result);
                windowDefault.title(titleDashboardWindows);
                windowDefault.bind("close", function () {
                populateDashboardList();
                });

                let dashboardConfig = new DashboardCustomConfiguration({ idTenant: idTenant });
                dashboardConfig.generateGrid();

                windowDefault.center().open();
                },
                error: function (result) {
                if (result.status === 403) {
                const msg = $("#accessDenied").html();

                windowDefault.content(msg);
                windowDefault.center().open();
                }
                }
                });

                });
                *@

                    });

            // --------------------------------------
            // PAP
            // --------------------------------------
            var ShowWindowProgressPap = (result) => {
                /*
                status:
                Pending = 1,
                Processing = 2,
                Finished = 3,
                Canceled = 4
                */

                const wnd = $("#windowPAPProgress").data("kendoWindow");
                const opened = wnd.options.visible;

                const SetWndContent = function (tenant_name, tenant_id, iconHtml) {

                    if (!opened) {
                        wnd.setOptions({
                            width: "350px",
                            height: "auto",
                            actions: [
                                //"Pin",
                                //"Minimize",
                                //"Maximize",
                                //"Close"
                            ]
                        });
                        wnd.title(_msgCurrentTitlePAP);

                        const progressContent = `<div class="c100 p0 big">
                                                                    <span>0%</span>
                                                                    <div class="slice">
                                                                    <div class="bar"></div>
                                                                    <div class="fill"></div>
                                                                    </div>
                                                                </div>`;

                        wnd.content(`<div class="notificationPAP-container">
                                                <div class="tenant-info">
                                                    <div class="image-layer">
                                                        ${iconHtml}
                                                    </div>
                                                        <h3><div>${tenant_name}</div><span>(${tenant_id})</span></h3>
                                                    </div>

                                                <div id="notificationPAP" class="lign-items-center" class_="d-flex align-items-center justify-content-center">${progressContent}</div>
                                                <!--<div id="notificationPAP-message"></div>-->
                                            </div>`);

                        wnd.center().open();

                        ShowInfoPAP(result);
                    } else {
                        ShowInfoPAP(result);
                    }
                };

                const GetTenantInfo = function (item) {

                    return new Promise((resolve, reject) => {
                        $.ajax({
                            url: '/Home/TenantInfo',
                            //type: 'POST',
                            dataType: 'json',
                            data: {
                                tenant: item
                            },
                            success: function (response) {
                                resolve(response);
                            },
                            error: function (xhr, status, error) {
                                reject(error);
                            }
                        });
                    });
                };

                const RefreshTag = function (item) {

                    $.ajax({
                        url: '/Diagram/VerifyElementSingle',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            tenant: idTenant,
                            elementType: notification.processType,
                            elementId: item.elementId,
                        },
                        success: function (response) {
                            RefreshElementPAP(response);
                        },
                        error: function (xhr, status, error) {
                        }
                    });
                };

                const ShowProgressPAP = (currentStep, totalSteps) => {

                    let percentage = 0;

                    if (currentStep > 0) {
                        percentage = Math.round((currentStep / totalSteps) * 100);
                    }

                    $("#notificationPAP").html(`<div class="c100 p${percentage} big">
                                                            <span>${percentage}%</span>
                                                                <div class="slice">
                                                                <div class="bar"></div>
                                                                <div class="fill"></div>
                                                                </div>
                                                            </div>`);
                };

                const ShowInfoPAP = (list) => {
                    const wnd = $("#windowPAPProgress").data("kendoWindow");
                    const wndActions = wnd.options.actions;

                    let item = result.find(i => i.steps > i.currentStep);
                    if (typeof item === 'undefined') {
                        item = result[0];
                    }

                    ShowProgressPAP(item.currentStep, item.steps);

                    /*
                    //|| warningsShow !== ''
                    let warningsShow='';
                    if (typeof item.data.warning !== 'undefined') {
                        const warnings = JSON.parse(item.data.warning);
                        warnings.forEach((warning) => {
                            const msg = warning[currentLanguage.toLowerCase()];
                            if (typeof msg !== 'undefined') {
                                warningsShow += `<div>${msg}</div>`;
                            }
                        });
                    }
                    */

                    // Error / Warning
                    /*
                    if (item.error !== null && false) {
                        $("#notificationPAP-message").html(item.error);
                        $("#windowPAPProgress").addClass("task-error");
                        //ShowProgressPAP(0, 1);
                        wnd.setOptions({
                            actions: [
                                //"Pin",
                                //"Minimize",
                                //"Maximize",
                                "Close"
                            ]
                        });
                    }
                    if (item.cancel && false) {
                        //$("#notificationPAP-message").html(item.error);
                        windowPAP.setOptions({
                            actions: [
                                //"Pin",
                                //"Minimize",
                                //"Maximize",
                                "Close"
                            ]
                        });
                    }
                    */

                    $("#windowPAPProgress").removeClass("task-error").removeClass("task-warning");
                    if (item.errorList.length > 0) {
                        $("#windowPAPProgress").addClass("task-error");
                        wnd.setOptions({
                            actions: [
                                "Close"
                            ]
                        });
                    } else if (item.warningList.length > 0) {
                        $("#windowPAPProgress").addClass("task-warning");
                        wnd.setOptions({
                            actions: [
                                "Close"
                            ]
                        });
                    }

                    if (item.currentStep === item.steps || item.status === 3 || item.cancel) {
                        //if (result.length === 1 && wndActions.length === 0) {
                        if (result.length === 1) {
                            ShowProgressPAP(item.currentStep, item.currentStep);
                            setTimeout(function () {
                                wnd.close();
                            }, 3000);
                        }
                    }

                    /*
                    if (notification?.data != null) {
                            RefreshTag(notification);
                        }
                    */
                };

                if (result.length === 0) {
                    if (opened) {
                        ShowProgressPAP(1, 1);
                        setTimeout(function () {
                            wnd.close();
                        }, 3000);
                    }
                    return;
                }

                GetTenantInfo(idTenant)
                    .then(response => {
                        if ('icon' in response) {
                            if (response.icon) {
                                iconHtml = `<img src="data:image/png;base64,${response.icon}">`;
                            } else {
                                iconHtml = `<img src="/images/bot-framework-default.png">`;
                            }
                        } else {
                            iconHtml = `<img src="/images/bot-framework-default.png">`;
                        }

                        if ('name' in response && 'id' in response) {
                            SetWndContent(response.name, response.id, iconHtml);
                        }
                    })
                    .catch(error => {
                        console.error('Error al obtener la información del tenant:', error);
                    });

            };

            var listPAPSummary = [];
            var ShowWindowPapSummary = (errors, warnings) => {
                if (errors.length === 0 && warnings.length === 0) {
                    return;
                }

                const wnd = $("#windowPAPSummary").data("kendoWindow");
                const opened = wnd.options.visible;

                const GenerateNotifications = (errors, warnings) => {
                    listPAPSummary = [];
                    let content = "";

                    errors.forEach((item) => {
                        Object.keys(item).forEach(key => {
                            if (key.toLowerCase() === currentLanguage.toLowerCase()) {
                                const items = item[key].split('|');
                                let title = items.shift();
                                listPAPSummary.push(["error", '"' + title + '"']);

                                let elements = "";
                                if (items.length > 0) {
                                    items.forEach((el) => {
                                        listPAPSummary.push([" ", '"' + el + '"']);
                                    });

                                    elements = items.map((el, index) => {
                                        return `<p>${el}</p>`;
                                    }).join('');
                                } else {
                                    listPAPSummary.push([" ", "N/A"]);
                                    elements = "<p>N/A</p>";
                                }
                                content += `<li class="item-error">
                                                                    <span class="k-link">${title}</span>
                                                                    <div>${elements}</div>
                                                                </li>`;
                            }
                        });
                    });

                    warnings.forEach((item) => {
                        Object.keys(item).forEach(key => {
                            if (key.toLowerCase() === currentLanguage.toLowerCase()) {
                                const items = item[key].split('|');
                                let title = items.shift();
                                listPAPSummary.push(["warning", '"' + title + '"']);

                                let elements = "";
                                if (items.length > 0) {
                                    items.forEach((el) => {
                                        listPAPSummary.push([" ", '"' + el + '"']);
                                    });

                                    elements = items.map((el, index) => {
                                        return `<p>${el}</p>`;
                                    }).join('');
                                } else {
                                    listPAPSummary.push([" ", "N/A"]);
                                    elements = "<p>N/A</p>";
                                }
                                content += `<li class="item-warning">
                                                                        <span class="k-link">${title}</span>
                                                                        <div>${elements}</div>
                                                                    </li>`;
                            }
                        });
                    });
                    return content;
                };

                const diagrama = $("#diagram").data("kendoDiagram");
                const content = GenerateNotifications(errors, warnings);
                if (!opened) {
                    wnd.title(_msgCurrentTitlePAPSummary);

                    let buttonGoToDiagram = "";
                    if (typeof diagrama === 'undefined') {
                        buttonGoToDiagram = `<div>
                                                        <a href="#" id="btn-gotodiagram" class="k-button k-button-solid-base">@GlobalIdentifierLanguage["Ir al diagrama"].Value</a>
                                                    </div>`;
                    }
                    // wnd.content(`<div class="summaryPAP-container">
                    //                         <div class="summary-header">
                    //                             <p>@GlobalIdentifierLanguage["_msgDeploySummary"].Value</p>
                    //                         </div>
                    //                         <div class="summary-content">
                    //                             <ul id="panel-pap-summary">${content}</ul>
                    //                         </div>
                    //                         <div class="summary-footer">
                    //                             <div>
                    //                                 <button type="button" class="k-button k-button-solid-base btn-summary-download">@GlobalIdentifierLanguage["Descargar"].Value</button>
                    //                             </div>
                    //                             <div>
                    //                                 <button type="button" class="k-button k-button-solid-base btn-summary-ignore">@GlobalIdentifierLanguage["Cancelar"].Value</button>
                    //                             </div>
                    //                             ${buttonGoToDiagram}
                    //                         </div>
                    //                     </div>`);
                    // wnd.center().open();
                } else {
                    $("#panel-pap-summary").html(content);
                }

                $("#panel-pap-summary").kendoPanelBar({
                    //expandMode: "single"
                });

                if (typeof diagrama === 'undefined' && typeof GenerateGoToDiagram !== 'undefined') {
                    GenerateGoToDiagram();
                }
            };

            // Telemetria PAP
            // --
            WaitForSignalRStart();
            // --

            </text>
        }
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>